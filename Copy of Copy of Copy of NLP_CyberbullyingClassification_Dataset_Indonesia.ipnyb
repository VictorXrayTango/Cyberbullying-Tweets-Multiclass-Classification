{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1BZo8MmAcJsGSmcgJLz7_a20E9DvUIuwb","timestamp":1687179318422},{"file_id":"1_WM-PBDPY5n-IGYNcvr7vNmNh-4ywT6O","timestamp":1687159811340},{"file_id":"1XjoLxYtuJqHZb2D4k52DMFnEMzbggmtV","timestamp":1687143488345}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SPRQFJo3AyIM","executionInfo":{"status":"ok","timestamp":1687179425101,"user_tz":-420,"elapsed":77667,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}},"outputId":"8ece9064-6009-482f-c712-b4ce8a4f56cc"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["!mkdir ~/.kaggle\n","!cp /content/drive/MyDrive/kaggle.json ~/.kaggle\n","!chmod 600 ~/.kaggle/kaggle.json"],"metadata":{"id":"hVYQtF3EAy4k","executionInfo":{"status":"ok","timestamp":1687179425729,"user_tz":-420,"elapsed":634,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["!kaggle datasets download -d ilhamfp31/indonesian-abusive-and-hate-speech-twitter-text"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QHe8QeqdA2h8","executionInfo":{"status":"ok","timestamp":1687179427919,"user_tz":-420,"elapsed":2192,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}},"outputId":"e93832fa-2f76-4d00-9602-8d8c8db8cc6c"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading indonesian-abusive-and-hate-speech-twitter-text.zip to /content\n","100% 814k/814k [00:00<00:00, 1.68MB/s]\n","100% 814k/814k [00:00<00:00, 1.68MB/s]\n"]}]},{"cell_type":"code","source":["!unzip indonesian-abusive-and-hate-speech-twitter-text.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q4ktFtdyA-7r","executionInfo":{"status":"ok","timestamp":1687179428516,"user_tz":-420,"elapsed":603,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}},"outputId":"eb897a94-0804-4f02-c320-7e85a672fac8"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  indonesian-abusive-and-hate-speech-twitter-text.zip\n","  inflating: README.md               \n","  inflating: abusive.csv             \n","  inflating: citation.bib            \n","  inflating: data.csv                \n","  inflating: new_kamusalay.csv       \n"]}]},{"cell_type":"code","source":["!pip install nlp-id"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zk72ioKO_qeN","executionInfo":{"status":"ok","timestamp":1687179447209,"user_tz":-420,"elapsed":18698,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}},"outputId":"65464529-3378-4f02-ee83-f11c458df109"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting nlp-id\n","  Downloading nlp_id-0.1.14.0.tar.gz (7.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.9/7.9 MB\u001b[0m \u001b[31m36.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: scikit-learn==1.2.2 in /usr/local/lib/python3.10/dist-packages (from nlp-id) (1.2.2)\n","Requirement already satisfied: nltk==3.8.1 in /usr/local/lib/python3.10/dist-packages (from nlp-id) (3.8.1)\n","Collecting wget==3.2 (from nlp-id)\n","  Downloading wget-3.2.zip (10 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting pytest==7.3.1 (from nlp-id)\n","  Downloading pytest-7.3.1-py3-none-any.whl (320 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m320.5/320.5 kB\u001b[0m \u001b[31m25.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from nltk==3.8.1->nlp-id) (8.1.3)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from nltk==3.8.1->nlp-id) (1.2.0)\n","Requirement already satisfied: regex>=2021.8.3 in /usr/local/lib/python3.10/dist-packages (from nltk==3.8.1->nlp-id) (2022.10.31)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from nltk==3.8.1->nlp-id) (4.65.0)\n","Requirement already satisfied: iniconfig in /usr/local/lib/python3.10/dist-packages (from pytest==7.3.1->nlp-id) (2.0.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from pytest==7.3.1->nlp-id) (23.1)\n","Requirement already satisfied: pluggy<2.0,>=0.12 in /usr/local/lib/python3.10/dist-packages (from pytest==7.3.1->nlp-id) (1.0.0)\n","Requirement already satisfied: exceptiongroup>=1.0.0rc8 in /usr/local/lib/python3.10/dist-packages (from pytest==7.3.1->nlp-id) (1.1.1)\n","Requirement already satisfied: tomli>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from pytest==7.3.1->nlp-id) (2.0.1)\n","Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.2.2->nlp-id) (1.22.4)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.2.2->nlp-id) (1.10.1)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn==1.2.2->nlp-id) (3.1.0)\n","Building wheels for collected packages: nlp-id, wget\n","  Building wheel for nlp-id (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for nlp-id: filename=nlp_id-0.1.14.0-py3-none-any.whl size=8074110 sha256=79abec7501cc3a4e2374b9d26bafdff0e36c9ec46707f18ae1754d532812a400\n","  Stored in directory: /root/.cache/pip/wheels/16/5d/1e/051d2642dfffeb89716569b4dad1552b6e8dd980572c5e3496\n","  Building wheel for wget (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for wget: filename=wget-3.2-py3-none-any.whl size=9657 sha256=eb4398532daf220a1594b2c06867abe1b7af8ddec460617e7a20172b786291b1\n","  Stored in directory: /root/.cache/pip/wheels/8b/f1/7f/5c94f0a7a505ca1c81cd1d9208ae2064675d97582078e6c769\n","Successfully built nlp-id wget\n","Installing collected packages: wget, pytest, nlp-id\n","  Attempting uninstall: pytest\n","    Found existing installation: pytest 7.2.2\n","    Uninstalling pytest-7.2.2:\n","      Successfully uninstalled pytest-7.2.2\n","Successfully installed nlp-id-0.1.14.0 pytest-7.3.1 wget-3.2\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.feature_extraction.text import CountVectorizer\n","from collections import Counter\n","import string\n","from nlp_id.lemmatizer import Lemmatizer"],"metadata":{"id":"pxmlP8XHBK26","executionInfo":{"status":"ok","timestamp":1687179449194,"user_tz":-420,"elapsed":1997,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["pd.set_option('mode.chained_assignment', None)"],"metadata":{"id":"m4tFOEcRFyFC","executionInfo":{"status":"ok","timestamp":1687179449195,"user_tz":-420,"elapsed":6,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["df =  pd.read_csv(\"data.csv\", encoding='latin-1')"],"metadata":{"id":"diCu61N5BNlL","executionInfo":{"status":"ok","timestamp":1687179449195,"user_tz":-420,"elapsed":6,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":739},"id":"NGZpb2y9BtC8","executionInfo":{"status":"ok","timestamp":1687179449854,"user_tz":-420,"elapsed":664,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}},"outputId":"1dc2b00e-142f-4d4f-8a10-801fe544d5e3"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                               Tweet  HS  Abusive  \\\n","0  - disaat semua cowok berusaha melacak perhatia...   1        1   \n","1  RT USER: USER siapa yang telat ngasih tau elu?...   0        1   \n","2  41. Kadang aku berfikir, kenapa aku tetap perc...   0        0   \n","3  USER USER AKU ITU AKU\\n\\nKU TAU MATAMU SIPIT T...   0        0   \n","4  USER USER Kaum cebong kapir udah keliatan dong...   1        1   \n","\n","   HS_Individual  HS_Group  HS_Religion  HS_Race  HS_Physical  HS_Gender  \\\n","0              1         0            0        0            0          0   \n","1              0         0            0        0            0          0   \n","2              0         0            0        0            0          0   \n","3              0         0            0        0            0          0   \n","4              0         1            1        0            0          0   \n","\n","   HS_Other  HS_Weak  HS_Moderate  HS_Strong  \n","0         1        1            0          0  \n","1         0        0            0          0  \n","2         0        0            0          0  \n","3         0        0            0          0  \n","4         0        0            1          0  "],"text/html":["\n","  <div id=\"df-fc0150d9-c44c-41a2-82c3-16c5c848e124\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tweet</th>\n","      <th>HS</th>\n","      <th>Abusive</th>\n","      <th>HS_Individual</th>\n","      <th>HS_Group</th>\n","      <th>HS_Religion</th>\n","      <th>HS_Race</th>\n","      <th>HS_Physical</th>\n","      <th>HS_Gender</th>\n","      <th>HS_Other</th>\n","      <th>HS_Weak</th>\n","      <th>HS_Moderate</th>\n","      <th>HS_Strong</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>- disaat semua cowok berusaha melacak perhatia...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>RT USER: USER siapa yang telat ngasih tau elu?...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>41. Kadang aku berfikir, kenapa aku tetap perc...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>USER USER AKU ITU AKU\\n\\nKU TAU MATAMU SIPIT T...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>USER USER Kaum cebong kapir udah keliatan dong...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc0150d9-c44c-41a2-82c3-16c5c848e124')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fc0150d9-c44c-41a2-82c3-16c5c848e124 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fc0150d9-c44c-41a2-82c3-16c5c848e124');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df.drop(columns=['HS'], inplace = True)\n","df.drop(columns=['Abusive'], inplace = True)\n","df.drop(columns=['HS_Individual'], inplace = True)\n","df.drop(columns=['HS_Group'], inplace = True)\n","df.drop(columns=['HS_Weak'], inplace = True)\n","df.drop(columns=['HS_Moderate'], inplace = True)\n","df.drop(columns=['HS_Strong'], inplace = True)"],"metadata":{"id":"zvECRz6oBu7L","executionInfo":{"status":"ok","timestamp":1687179449855,"user_tz":-420,"elapsed":12,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"id":"_lZ2ioVHvHM6","executionInfo":{"status":"ok","timestamp":1687179529295,"user_tz":-420,"elapsed":631,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}},"outputId":"ad655011-844a-4239-eccb-f33b2359b57d","colab":{"base_uri":"https://localhost:8080/","height":423}},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   Tweet  HS_Religion  \\\n","0      - disaat semua cowok berusaha melacak perhatia...            0   \n","1      RT USER: USER siapa yang telat ngasih tau elu?...            0   \n","2      41. Kadang aku berfikir, kenapa aku tetap perc...            0   \n","3      USER USER AKU ITU AKU\\n\\nKU TAU MATAMU SIPIT T...            0   \n","4      USER USER Kaum cebong kapir udah keliatan dong...            1   \n","...                                                  ...          ...   \n","13164  USER jangan asal ngomong ndasmu. congor lu yg ...            0   \n","13165                       USER Kasur mana enak kunyuk'            0   \n","13166  USER Hati hati bisu :( .g\\n\\nlagi bosan huft \\...            0   \n","13167  USER USER USER USER Bom yang real mudah terdet...            0   \n","13168  USER Mana situ ngasih(\": itu cuma foto ya kuti...            0   \n","\n","       HS_Race  HS_Physical  HS_Gender  HS_Other  \n","0            0            0          0         1  \n","1            0            0          0         0  \n","2            0            0          0         0  \n","3            0            0          0         0  \n","4            0            0          0         0  \n","...        ...          ...        ...       ...  \n","13164        0            1          0         0  \n","13165        0            0          0         0  \n","13166        0            0          0         0  \n","13167        0            0          0         0  \n","13168        0            0          0         1  \n","\n","[13169 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-b22a0e78-ceef-4b65-a90c-ff92290548bf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tweet</th>\n","      <th>HS_Religion</th>\n","      <th>HS_Race</th>\n","      <th>HS_Physical</th>\n","      <th>HS_Gender</th>\n","      <th>HS_Other</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>- disaat semua cowok berusaha melacak perhatia...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>RT USER: USER siapa yang telat ngasih tau elu?...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>41. Kadang aku berfikir, kenapa aku tetap perc...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>USER USER AKU ITU AKU\\n\\nKU TAU MATAMU SIPIT T...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>USER USER Kaum cebong kapir udah keliatan dong...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13164</th>\n","      <td>USER jangan asal ngomong ndasmu. congor lu yg ...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13165</th>\n","      <td>USER Kasur mana enak kunyuk'</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13166</th>\n","      <td>USER Hati hati bisu :( .g\\n\\nlagi bosan huft \\...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13167</th>\n","      <td>USER USER USER USER Bom yang real mudah terdet...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13168</th>\n","      <td>USER Mana situ ngasih(\": itu cuma foto ya kuti...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>13169 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b22a0e78-ceef-4b65-a90c-ff92290548bf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b22a0e78-ceef-4b65-a90c-ff92290548bf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b22a0e78-ceef-4b65-a90c-ff92290548bf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df1 = df[(df['HS_Religion'] + df['HS_Race'] + df['HS_Physical'] + df['HS_Religion'] + df['HS_Gender'] +df['HS_Other']) != 0]"],"metadata":{"id":"UphxqswcL1N8","executionInfo":{"status":"ok","timestamp":1687179449855,"user_tz":-420,"elapsed":11,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df[(df['HS_Religion'] + df['HS_Race'] + df['HS_Physical'] + df['HS_Religion'] + df['HS_Gender'] +df['HS_Other']) != 0]"],"metadata":{"id":"zaGg6bMyvBe6","executionInfo":{"status":"ok","timestamp":1687179502066,"user_tz":-420,"elapsed":555,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}},"outputId":"86f0d8b9-03bb-435c-ce0a-fe2bb46039eb","colab":{"base_uri":"https://localhost:8080/","height":423}},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   Tweet  HS_Religion  \\\n","0      - disaat semua cowok berusaha melacak perhatia...            0   \n","4      USER USER Kaum cebong kapir udah keliatan dong...            1   \n","5      USER Ya bani taplak dkk \\xf0\\x9f\\x98\\x84\\xf0\\x...            0   \n","10     Setidaknya gw punya jari tengah buat lu, sebel...            0   \n","11     USER USER USER USER BANCI KALENG MALU GA BISA ...            0   \n","...                                                  ...          ...   \n","13157  USER Pak Recep..............anda salah, itu gu...            0   \n","13161  brengsek itu orang terbuat dr apa bikin gue be...            0   \n","13162  Kapolda Babi! Biadap dan Bodoh! Gak punya otak...            0   \n","13164  USER jangan asal ngomong ndasmu. congor lu yg ...            0   \n","13168  USER Mana situ ngasih(\": itu cuma foto ya kuti...            0   \n","\n","       HS_Race  HS_Physical  HS_Gender  HS_Other  \n","0            0            0          0         1  \n","4            0            0          0         0  \n","5            0            0          0         1  \n","10           0            0          0         1  \n","11           0            0          1         0  \n","...        ...          ...        ...       ...  \n","13157        0            0          0         1  \n","13161        0            0          0         1  \n","13162        0            0          0         1  \n","13164        0            1          0         0  \n","13168        0            0          0         1  \n","\n","[5561 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-2d2c6bae-7eca-45e0-bae9-95c3c668d356\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tweet</th>\n","      <th>HS_Religion</th>\n","      <th>HS_Race</th>\n","      <th>HS_Physical</th>\n","      <th>HS_Gender</th>\n","      <th>HS_Other</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>- disaat semua cowok berusaha melacak perhatia...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>USER USER Kaum cebong kapir udah keliatan dong...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>USER Ya bani taplak dkk \\xf0\\x9f\\x98\\x84\\xf0\\x...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Setidaknya gw punya jari tengah buat lu, sebel...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>USER USER USER USER BANCI KALENG MALU GA BISA ...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13157</th>\n","      <td>USER Pak Recep..............anda salah, itu gu...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13161</th>\n","      <td>brengsek itu orang terbuat dr apa bikin gue be...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13162</th>\n","      <td>Kapolda Babi! Biadap dan Bodoh! Gak punya otak...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13164</th>\n","      <td>USER jangan asal ngomong ndasmu. congor lu yg ...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13168</th>\n","      <td>USER Mana situ ngasih(\": itu cuma foto ya kuti...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5561 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2d2c6bae-7eca-45e0-bae9-95c3c668d356')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2d2c6bae-7eca-45e0-bae9-95c3c668d356 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2d2c6bae-7eca-45e0-bae9-95c3c668d356');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":949},"id":"VUexbimkItkq","executionInfo":{"status":"ok","timestamp":1687179449855,"user_tz":-420,"elapsed":10,"user":{"displayName":"Vito Xavier","userId":"12934849543838375546"}},"outputId":"c696ff47-f4a1-4f9f-e407-b986eb85f8fe"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   Tweet  HS_Religion  \\\n","0      - disaat semua cowok berusaha melacak perhatia...            0   \n","4      USER USER Kaum cebong kapir udah keliatan dong...            1   \n","5      USER Ya bani taplak dkk \\xf0\\x9f\\x98\\x84\\xf0\\x...            0   \n","10     Setidaknya gw punya jari tengah buat lu, sebel...            0   \n","11     USER USER USER USER BANCI KALENG MALU GA BISA ...            0   \n","...                                                  ...          ...   \n","13157  USER Pak Recep..............anda salah, itu gu...            0   \n","13161  brengsek itu orang terbuat dr apa bikin gue be...            0   \n","13162  Kapolda Babi! Biadap dan Bodoh! Gak punya otak...            0   \n","13164  USER jangan asal ngomong ndasmu. congor lu yg ...            0   \n","13168  USER Mana situ ngasih(\": itu cuma foto ya kuti...            0   \n","\n","       HS_Race  HS_Physical  HS_Gender  HS_Other  \n","0            0            0          0         1  \n","4            0            0          0         0  \n","5            0            0          0         1  \n","10           0            0          0         1  \n","11           0            0          1         0  \n","...        ...          ...        ...       ...  \n","13157        0            0          0         1  \n","13161        0            0          0         1  \n","13162        0            0          0         1  \n","13164        0            1          0         0  \n","13168        0            0          0         1  \n","\n","[5561 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-e5ffb601-ca7c-47b7-b207-031d9a7b1241\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tweet</th>\n","      <th>HS_Religion</th>\n","      <th>HS_Race</th>\n","      <th>HS_Physical</th>\n","      <th>HS_Gender</th>\n","      <th>HS_Other</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>- disaat semua cowok berusaha melacak perhatia...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>USER USER Kaum cebong kapir udah keliatan dong...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>USER Ya bani taplak dkk \\xf0\\x9f\\x98\\x84\\xf0\\x...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Setidaknya gw punya jari tengah buat lu, sebel...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>USER USER USER USER BANCI KALENG MALU GA BISA ...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13157</th>\n","      <td>USER Pak Recep..............anda salah, itu gu...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13161</th>\n","      <td>brengsek itu orang terbuat dr apa bikin gue be...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13162</th>\n","      <td>Kapolda Babi! Biadap dan Bodoh! Gak punya otak...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13164</th>\n","      <td>USER jangan asal ngomong ndasmu. congor lu yg ...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13168</th>\n","      <td>USER Mana situ ngasih(\": itu cuma foto ya kuti...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5561 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5ffb601-ca7c-47b7-b207-031d9a7b1241')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e5ffb601-ca7c-47b7-b207-031d9a7b1241 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e5ffb601-ca7c-47b7-b207-031d9a7b1241');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["#Remove Punctuation\n","PUNCT_TO_REMOVE = string.punctuation\n","def remove_punctuation(text):\n","    return text.translate(str.maketrans('', '', PUNCT_TO_REMOVE))"],"metadata":{"id":"UCFgpPO7AQEl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lemmatizer = Lemmatizer()\n","def stem_words(text):\n","    return \" \".join([lemmatizer.lemmatize(word) for word in text.split()])"],"metadata":{"id":"UjVvWJU0BmEZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1['clean_text'] = df1['Tweet']\n","df1['clean_text'] = df1[\"clean_text\"].str.lower()\n","df1[\"clean_text\"] = df1[\"clean_text\"].apply(lambda text: remove_punctuation(text))\n","df1[\"clean_text\"] = df1[\"clean_text\"].apply(lambda text: stem_words(text))\n","df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":623},"id":"8bKVw0_YAjoB","executionInfo":{"status":"ok","timestamp":1687160136183,"user_tz":-420,"elapsed":10,"user":{"displayName":"Eldwin Felice","userId":"03749008353362800096"}},"outputId":"8f1227f0-bff0-4dcf-aade-c076c75d135e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   Tweet  HS_Religion  \\\n","0      - disaat semua cowok berusaha melacak perhatia...            0   \n","4      USER USER Kaum cebong kapir udah keliatan dong...            1   \n","5      USER Ya bani taplak dkk \\xf0\\x9f\\x98\\x84\\xf0\\x...            0   \n","10     Setidaknya gw punya jari tengah buat lu, sebel...            0   \n","11     USER USER USER USER BANCI KALENG MALU GA BISA ...            0   \n","...                                                  ...          ...   \n","13157  USER Pak Recep..............anda salah, itu gu...            0   \n","13161  brengsek itu orang terbuat dr apa bikin gue be...            0   \n","13162  Kapolda Babi! Biadap dan Bodoh! Gak punya otak...            0   \n","13164  USER jangan asal ngomong ndasmu. congor lu yg ...            0   \n","13168  USER Mana situ ngasih(\": itu cuma foto ya kuti...            0   \n","\n","       HS_Race  HS_Physical  HS_Gender  HS_Other  \\\n","0            0            0          0         1   \n","4            0            0          0         0   \n","5            0            0          0         1   \n","10           0            0          0         1   \n","11           0            0          1         0   \n","...        ...          ...        ...       ...   \n","13157        0            0          0         1   \n","13161        0            0          0         1   \n","13162        0            0          0         1   \n","13164        0            1          0         0   \n","13168        0            0          0         1   \n","\n","                                              clean_text  \n","0      saat semua cowok usaha lacak perhati gue loe l...  \n","4      user user kaum cebong kapir udah liat dongok d...  \n","5      user ya bani taplak dkk xf0x9fx98x84xf0x9fx98x...  \n","10     tidak gw punya jari tengah buat lu bom gw ukur...  \n","11     user user user user banci kaleng malu ga bisa ...  \n","...                                                  ...  \n","13157  user pak recepanda salah itu gubernur pakkkkbu...  \n","13161  brengsek itu orang buat dr apa bikin gue kata ...  \n","13162  kapolda babi biadap dan bodoh gak punya otak kali  \n","13164  user jangan asal ngomong ndasmu congor lu yg s...  \n","13168  user mana situ ngasih itu cuma foto ya kutil onta  \n","\n","[5561 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-4b717fae-3e36-4d04-9705-2f37b664cf3b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tweet</th>\n","      <th>HS_Religion</th>\n","      <th>HS_Race</th>\n","      <th>HS_Physical</th>\n","      <th>HS_Gender</th>\n","      <th>HS_Other</th>\n","      <th>clean_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>- disaat semua cowok berusaha melacak perhatia...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>saat semua cowok usaha lacak perhati gue loe l...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>USER USER Kaum cebong kapir udah keliatan dong...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>user user kaum cebong kapir udah liat dongok d...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>USER Ya bani taplak dkk \\xf0\\x9f\\x98\\x84\\xf0\\x...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>user ya bani taplak dkk xf0x9fx98x84xf0x9fx98x...</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Setidaknya gw punya jari tengah buat lu, sebel...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>tidak gw punya jari tengah buat lu bom gw ukur...</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>USER USER USER USER BANCI KALENG MALU GA BISA ...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>user user user user banci kaleng malu ga bisa ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13157</th>\n","      <td>USER Pak Recep..............anda salah, itu gu...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>user pak recepanda salah itu gubernur pakkkkbu...</td>\n","    </tr>\n","    <tr>\n","      <th>13161</th>\n","      <td>brengsek itu orang terbuat dr apa bikin gue be...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>brengsek itu orang buat dr apa bikin gue kata ...</td>\n","    </tr>\n","    <tr>\n","      <th>13162</th>\n","      <td>Kapolda Babi! Biadap dan Bodoh! Gak punya otak...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>kapolda babi biadap dan bodoh gak punya otak kali</td>\n","    </tr>\n","    <tr>\n","      <th>13164</th>\n","      <td>USER jangan asal ngomong ndasmu. congor lu yg ...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>user jangan asal ngomong ndasmu congor lu yg s...</td>\n","    </tr>\n","    <tr>\n","      <th>13168</th>\n","      <td>USER Mana situ ngasih(\": itu cuma foto ya kuti...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>user mana situ ngasih itu cuma foto ya kutil onta</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5561 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b717fae-3e36-4d04-9705-2f37b664cf3b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4b717fae-3e36-4d04-9705-2f37b664cf3b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4b717fae-3e36-4d04-9705-2f37b664cf3b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["from collections import Counter\n","cnt = Counter()\n","for text in df1[\"clean_text\"].values:\n","    for word in text.split():\n","        cnt[word] += 1\n","cnt.most_common(50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ICQObGoCCVEX","executionInfo":{"status":"ok","timestamp":1687160140361,"user_tz":-420,"elapsed":5,"user":{"displayName":"Eldwin Felice","userId":"03749008353362800096"}},"outputId":"4d986d30-103f-4ec9-c37a-cdb18e3ffe11"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('user', 7947),\n"," ('yg', 1249),\n"," ('di', 907),\n"," ('dan', 788),\n"," ('itu', 658),\n"," ('jokowi', 629),\n"," ('ini', 617),\n"," ('rt', 573),\n"," ('url', 506),\n"," ('cebong', 463),\n"," ('yang', 431),\n"," ('jadi', 426),\n"," ('aja', 412),\n"," ('ada', 404),\n"," ('ya', 403),\n"," ('lu', 374),\n"," ('gak', 365),\n"," ('islam', 365),\n"," ('orang', 333),\n"," ('indonesia', 324),\n"," ('ga', 311),\n"," ('lo', 307),\n"," ('si', 303),\n"," ('mau', 303),\n"," ('pak', 301),\n"," ('cina', 296),\n"," ('2019gantipresiden', 293),\n"," ('ahok', 292),\n"," ('sama', 290),\n"," ('apa', 290),\n"," ('presiden', 289),\n"," ('nya', 285),\n"," ('agama', 282),\n"," ('dari', 275),\n"," ('dia', 268),\n"," ('bisa', 267),\n"," ('rakyat', 251),\n"," ('juga', 226),\n"," ('rezim', 226),\n"," ('pki', 224),\n"," ('ke', 215),\n"," ('lagi', 215),\n"," ('bukan', 214),\n"," ('tapi', 210),\n"," ('buat', 206),\n"," ('kita', 203),\n"," ('komunis', 203),\n"," ('prabowo', 201),\n"," ('kalo', 198),\n"," ('semua', 191)]"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["FREQWORDS = set([w for (w, wc) in cnt.most_common(5)])\n","def remove_freqwords(text):\n","    return \" \".join([word for word in str(text).split() if word not in FREQWORDS])"],"metadata":{"id":"kAZpsifSCiXv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["RAREWORDS = set([w for (w, wc) in cnt.most_common() if wc <=5])\n","def remove_rarewords(text):\n","    return \" \".join([word for word in str(text).split() if word not in RAREWORDS])"],"metadata":{"id":"YNcHzpbKCmZI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from nlp_id.stopword import StopWord\n","stopword = StopWord()\n","def remove_stopwords(text):\n","  return \" \".join([stopword.remove_stopword(word) for word in text.split()])"],"metadata":{"id":"9ADQWz5vIkHq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1[\"clean_text\"] = df1[\"clean_text\"].apply(lambda text: remove_rarewords(text))\n","df1[\"clean_text\"] = df1[\"clean_text\"].apply(lambda text: remove_freqwords(text))\n","df1[\"clean_text\"] = df1[\"clean_text\"].apply(lambda text: remove_stopwords(text))\n","\n","df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":502},"id":"oOCHGxRECtQy","executionInfo":{"status":"ok","timestamp":1687160152468,"user_tz":-420,"elapsed":1318,"user":{"displayName":"Eldwin Felice","userId":"03749008353362800096"}},"outputId":"75e91c21-9e04-48e3-a828-ef51ac3baafa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   Tweet  HS_Religion  \\\n","0      - disaat semua cowok berusaha melacak perhatia...            0   \n","4      USER USER Kaum cebong kapir udah keliatan dong...            1   \n","5      USER Ya bani taplak dkk \\xf0\\x9f\\x98\\x84\\xf0\\x...            0   \n","10     Setidaknya gw punya jari tengah buat lu, sebel...            0   \n","11     USER USER USER USER BANCI KALENG MALU GA BISA ...            0   \n","...                                                  ...          ...   \n","13157  USER Pak Recep..............anda salah, itu gu...            0   \n","13161  brengsek itu orang terbuat dr apa bikin gue be...            0   \n","13162  Kapolda Babi! Biadap dan Bodoh! Gak punya otak...            0   \n","13164  USER jangan asal ngomong ndasmu. congor lu yg ...            0   \n","13168  USER Mana situ ngasih(\": itu cuma foto ya kuti...            0   \n","\n","       HS_Race  HS_Physical  HS_Gender  HS_Other  \\\n","0            0            0          0         1   \n","4            0            0          0         0   \n","5            0            0          0         1   \n","10           0            0          0         1   \n","11           0            0          1         0   \n","...        ...          ...        ...       ...   \n","13157        0            0          0         1   \n","13161        0            0          0         1   \n","13162        0            0          0         1   \n","13164        0            1          0         0   \n","13168        0            0          0         1   \n","\n","                                              clean_text  \n","0        cowok usaha perhati  loe perhati  kasih  elo...  \n","4      kaum cebong kapir  liat dongok    dongok  hahahah  \n","5                                            bani taplak  \n","10                       gw    lu bom gw nyali  bacot lu  \n","11            banci kaleng malu ga      2   nyungsep url  \n","...                                                  ...  \n","13157   salah gubernur presiden presiden   nih liat k...  \n","13161             brengsek orang  dr  bikin   kasar mulu  \n","13162                              babi bodoh gak  otak   \n","13164                                  ngomong congor lu  \n","13168                           ngasih  foto  kutil onta  \n","\n","[5561 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-2c1f51f0-6739-4500-9578-56723023e191\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tweet</th>\n","      <th>HS_Religion</th>\n","      <th>HS_Race</th>\n","      <th>HS_Physical</th>\n","      <th>HS_Gender</th>\n","      <th>HS_Other</th>\n","      <th>clean_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>- disaat semua cowok berusaha melacak perhatia...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>cowok usaha perhati  loe perhati  kasih  elo...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>USER USER Kaum cebong kapir udah keliatan dong...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>kaum cebong kapir  liat dongok    dongok  hahahah</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>USER Ya bani taplak dkk \\xf0\\x9f\\x98\\x84\\xf0\\x...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>bani taplak</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Setidaknya gw punya jari tengah buat lu, sebel...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>gw    lu bom gw nyali  bacot lu</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>USER USER USER USER BANCI KALENG MALU GA BISA ...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>banci kaleng malu ga      2   nyungsep url</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13157</th>\n","      <td>USER Pak Recep..............anda salah, itu gu...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>salah gubernur presiden presiden   nih liat k...</td>\n","    </tr>\n","    <tr>\n","      <th>13161</th>\n","      <td>brengsek itu orang terbuat dr apa bikin gue be...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>brengsek orang  dr  bikin   kasar mulu</td>\n","    </tr>\n","    <tr>\n","      <th>13162</th>\n","      <td>Kapolda Babi! Biadap dan Bodoh! Gak punya otak...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>babi bodoh gak  otak</td>\n","    </tr>\n","    <tr>\n","      <th>13164</th>\n","      <td>USER jangan asal ngomong ndasmu. congor lu yg ...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>ngomong congor lu</td>\n","    </tr>\n","    <tr>\n","      <th>13168</th>\n","      <td>USER Mana situ ngasih(\": itu cuma foto ya kuti...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>ngasih  foto  kutil onta</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5561 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2c1f51f0-6739-4500-9578-56723023e191')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2c1f51f0-6739-4500-9578-56723023e191 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2c1f51f0-6739-4500-9578-56723023e191');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["df1[\"text_length\"] = [len(word.split()) for word in df1[\"clean_text\"]]"],"metadata":{"id":"1Yh6GORwlOkF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["(df1['text_length'] == 0).sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hR7WP4OUlXup","executionInfo":{"status":"ok","timestamp":1687160201582,"user_tz":-420,"elapsed":451,"user":{"displayName":"Eldwin Felice","userId":"03749008353362800096"}},"outputId":"0ee90a20-94c3-48d4-f1c3-d1bf20f830f8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["21"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["df1 = df1[df1['text_length'] != 0]"],"metadata":{"id":"Chsh3S_wlcXk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x = df1[['clean_text']]\n","y = df1[['HS_Religion','HS_Race','HS_Physical','HS_Gender','HS_Other']]"],"metadata":{"id":"KCysBz_SJxvb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.multioutput import MultiOutputClassifier\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.feature_extraction.text import TfidfTransformer\n","from sklearn.metrics import classification_report, accuracy_score, multilabel_confusion_matrix, ConfusionMatrixDisplay\n","import matplotlib.pyplot as plt\n","\n","description_list = df1['clean_text'].tolist()\n","count_vect = CountVectorizer()\n","x_train_counts = count_vect.fit_transform(description_list)\n","tfidf_transformer = TfidfTransformer()\n","x_train_tfidf = tfidf_transformer.fit_transform(x_train_counts)\n","\n","train_x, test_x, train_y, test_y = train_test_split(x_train_tfidf, y, test_size=0.3, shuffle=True, random_state=100)"],"metadata":{"id":"O-GVxXcrKECU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.naive_bayes import MultinomialNB\n","\n","clf = MultiOutputClassifier(MultinomialNB()).fit(train_x,train_y)\n","y_score = clf.predict(test_x)"],"metadata":{"id":"MH8PafWAWVAb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"Accuracy: %.2f%%\" % (accuracy_score(test_y, y_score) * 100))\n","eval_report = classification_report(test_y, y_score, target_names=y.columns)\n","print(eval_report)\n","\n","mcm = multilabel_confusion_matrix(test_y, y_score)\n","\n","mcm_disp = ConfusionMatrixDisplay(mcm)\n","\n","f, axes = plt.subplots(1, 5, figsize=(25, 5))\n","axes = axes.ravel()\n","\n","for i in range(5):\n","  disp = ConfusionMatrixDisplay(mcm[i], display_labels=[0, 1])\n","  disp.plot(ax=axes[i], values_format='.4g')\n","  disp.ax_.set_title(f'{y.columns[i]}')\n","  if i<2:\n","      disp.ax_.set_xlabel('')\n","  if i%5!=0:\n","      disp.ax_.set_ylabel('')\n","  disp.im_.colorbar.remove()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":558},"id":"s7enTX8fWhEk","executionInfo":{"status":"ok","timestamp":1687160233636,"user_tz":-420,"elapsed":1094,"user":{"displayName":"Eldwin Felice","userId":"03749008353362800096"}},"outputId":"1fa4f58a-53cb-44ef-b2f7-e4ea229d6990"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 74.61%\n","              precision    recall  f1-score   support\n","\n"," HS_Religion       0.93      0.49      0.64       239\n","     HS_Race       0.91      0.32      0.47       167\n"," HS_Physical       1.00      0.12      0.21       100\n","   HS_Gender       0.90      0.10      0.18        90\n","    HS_Other       0.85      0.96      0.90      1117\n","\n","   micro avg       0.86      0.74      0.79      1713\n","   macro avg       0.92      0.40      0.48      1713\n","weighted avg       0.88      0.74      0.74      1713\n"," samples avg       0.76      0.75      0.76      1713\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in samples with no predicted labels. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2500x500 with 5 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.svm import SVC\n","\n","clf = MultiOutputClassifier(SVC()).fit(train_x,train_y)\n","y_score = clf.predict(test_x)"],"metadata":{"id":"uMJCRo19KPp6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"Accuracy: %.2f%%\" % (accuracy_score(test_y, y_score) * 100))\n","eval_report = classification_report(test_y, y_score, target_names=y.columns)\n","print(eval_report)\n","\n","mcm = multilabel_confusion_matrix(test_y, y_score)\n","\n","mcm_disp = ConfusionMatrixDisplay(mcm)\n","\n","f, axes = plt.subplots(1, 5, figsize=(25, 5))\n","axes = axes.ravel()\n","\n","for i in range(5):\n","  disp = ConfusionMatrixDisplay(mcm[i], display_labels=[0, 1])\n","  disp.plot(ax=axes[i], values_format='.4g')\n","  disp.ax_.set_title(f'{y.columns[i]}')\n","  if i<2:\n","      disp.ax_.set_xlabel('')\n","  if i%5!=0:\n","      disp.ax_.set_ylabel('')\n","  disp.im_.colorbar.remove()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":558},"id":"-Bp4igTBKT4v","executionInfo":{"status":"ok","timestamp":1687160249981,"user_tz":-420,"elapsed":1844,"user":{"displayName":"Eldwin Felice","userId":"03749008353362800096"}},"outputId":"faab54ba-424f-4dbc-f3b8-04e99c488671"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 81.53%\n","              precision    recall  f1-score   support\n","\n"," HS_Religion       0.84      0.67      0.74       239\n","     HS_Race       0.95      0.66      0.78       167\n"," HS_Physical       0.97      0.32      0.48       100\n","   HS_Gender       0.87      0.37      0.52        90\n","    HS_Other       0.87      0.95      0.91      1117\n","\n","   micro avg       0.87      0.82      0.84      1713\n","   macro avg       0.90      0.60      0.69      1713\n","weighted avg       0.88      0.82      0.83      1713\n"," samples avg       0.84      0.83      0.83      1713\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in samples with no predicted labels. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2500x500 with 5 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAB8sAAAGjCAYAAACrEPQzAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABmvUlEQVR4nO3deZhdg/0G8HeyzWTfdxFZEFtQVFH73qq1VXsoqlVLbS1VBEXVrtZqCW0oqrTVllqLVu27iCQSsiey78vM/f2Rn4kxQZZJZpL7+TzPPNxzzj33e+eZyTv3vvecU1IoFAoBAAAAAAAAgCJSr7YHAAAAAAAAAIBVTVkOAAAAAAAAQNFRlgMAAAAAAABQdJTlAAAAAAAAABQdZTkAAAAAAAAARUdZDgAAAAAAAEDRUZYDAAAAAAAAUHSU5QAAAAAAAAAUHWU5AAAAAAAAAEVHWQ6r0DrrrJOjjz668vbTTz+dkpKSPP3008u8rxEjRqSkpCQDBgyosfkAAIC6r6SkJCeddNIqfcyddtopO+2000rb/2dfKwGwZurfv39KSkpqewwAatnRRx+dZs2a1fYYkERZTh03YMCAlJSU5OWXX17i+p122ikbb7xx5e358+fnuuuuy+abb54WLVqkVatW2WijjfL9738/77333jI9dklJSZWvFi1aZMcdd8zf//73FXpOANRdcgeAupIF9erVS5cuXbLHHnss14drAahdtZknSTJv3rz8+te/zte//vW0bt06jRo1SpcuXbLvvvvmnnvuSXl5+XI/NwBqT23ny6xZs3LxxRenb9++adKkSVq2bJntt98+d911VwqFQpVtZ8+enf79+3s9Q53XoLYHgJp00EEH5Z///GcOPfTQHH/88VmwYEHee++9PPzww9l2223Tp0+fZdrf7rvvnqOOOiqFQiEffvhhbr755nzrW9/KP//5z+y5554rPO8OO+yQOXPmpFGjRst83+7du2fOnDlp2LDhCs8BwPJZ3XIHgJq3MrNg+PDhuemmm7LLLrvk73//e/bee++V9Cy+3L/+9a9ae2yAYlCTeTJx4sTsvffeeeWVV7Lnnnvm5z//edq0aZNx48bl8ccfz2GHHZahQ4fmvPPOW4nPCIC6oCbzZfz48dl1110zaNCgHHLIITnppJMyd+7cPPDAA+nXr1/+8Y9/ZODAgalfv36SRWX5hRdemCQr9SxVsKKU5awxXnrppTz88MO55JJL8rOf/azKuhtuuCFTp05d5n2ut956OeKIIypvH3TQQdlwww1z3XXX1UhpUa9evZSVlS3XfUtKSpb7vgCsuNUxdwCoWasiCw444ID07ds31157ba2W5cvzAV8Alk5N58mRRx6Z1157LQ888EAOPPDAKuvOOeecvPzyyxk8ePCKjl0nzJ49O02aNKntMQDqpJrOl379+mXQoEF58MEHs++++1YuP+WUU3LWWWflyiuvzOabb56f/vSnNTH+CisUCpk7d24aN25c26NQxzkNO2uMYcOGJUm22267auvq16+ftm3brvBjbLDBBmnXrl3lY31i3rx5ueCCC9K7d++UlpamW7du+clPfpJ58+Z94f4+75rlN954Y3r27JnGjRvnq1/9ap599tlq1wj8vGuWP/nkk9l+++3TtGnTtGrVKvvtt18GDRpUZZtPrg81dOjQHH300WnVqlVatmyZY445JrNnz17m7wtAMarN3PnLX/6Sb37zm+nSpUtKS0vTq1evXHzxxUs8leILL7yQb3zjG2ndunWaNm2avn375rrrrquyzXvvvZdvf/vbadOmTcrKyrLlllvmr3/96wrPD7CmWxVZsMkmm6Rdu3YZPnx4tXUPPfRQNt5445SWlmajjTbKI488UrnuqaeeSklJSR588MFq97v77rtTUlKS559/Pkkybty4HHPMMVlrrbVSWlqazp07Z7/99suIESMq77Oka5bPnTs3/fv3z3rrrZeysrJ07tw5Bx54YJXcuvLKK7Ptttumbdu2ady4cbbYYov86U9/WsHvCsCapSbz5Pnnn8+jjz6a73//+9WK8k9sueWWOfzww6ssW9r3tkpKSnLSSSd9YQZ94rnnnstWW22VsrKy9OrVK7feeuvnzv2HP/whW2yxRRo3bpw2bdrkkEMOyciRI6ts88mphV955ZXssMMOadKkSbXyB4DFajJf/ve//+XRRx/N0UcfXaUo/8Rll12WddddN5dffnnmzJmTESNGpH379kmSCy+8sPJyU/37969yv9GjR2f//fdPs2bN0r59+5x55pnV3t+qqKjItddem4022ihlZWXp2LFjTjjhhEyZMqXKduuss0722WefPProo9lyyy3TuHHjL8we+IQjy1ktTJs2LR9//HG15QsWLKj8/+7duydJBg4cmO222y4NGtT8j/e0adMyZcqU9OrVq3JZRUVF9t133zz33HP5/ve/nw022CBvvfVWrrnmmrz//vt56KGHlukxbr755px00knZfvvtc9ppp2XEiBHZf//907p166y11lpfeN/HH388e++9d3r27Jn+/ftnzpw5+fWvf53tttsur776atZZZ50q2x988MHp0aNHLrvssrz66qv57W9/mw4dOuTyyy9fppkB1jR1OXeSRdenatasWU4//fQ0a9YsTz75ZM4///xMnz49V1xxReV2jz32WPbZZ5907tw5p556ajp16pRBgwbl4Ycfzqmnnpokeeedd7Lddtula9euOfvss9O0adPcd9992X///fPAAw/kgAMOqPHnBbA6qCtZMGXKlEyZMiW9e/eusvy5557Ln//855x44olp3rx5rr/++hx00EH56KOP0rZt2+y0007p1q1bBg4cWO3f8oEDB6ZXr17ZZpttkiw6k8k777yTk08+Oeuss04mTJiQxx57LB999FG11xCfKC8vzz777JMnnngihxxySE499dTMmDEjjz32WN5+++3K7Lruuuuy77775vDDD8/8+fPzxz/+Md/5znfy8MMP55vf/GaNf78A6ppVnSd/+9vfkqTKWUq+zLK+t/VlGZQkb731VvbYY4+0b98+/fv3z8KFC3PBBRekY8eO1R7/kksuyXnnnZeDDz44xx13XCZOnJhf//rX2WGHHfLaa6+lVatWldtOmjQpe++9dw455JAcccQRS9wfQDGorXw56qijlri+QYMGOeyww3LhhRfmP//5T7bZZpvcfPPN+eEPf5gDDjig8gNcffv2rbxPeXl59txzz2y99da58sor8/jjj+eqq65Kr1698sMf/rByuxNOOCEDBgzIMccck1NOOSXDhw/PDTfckNdeey3/+c9/qlyqdvDgwTn00ENzwgkn5Pjjj8/666+/3M+ZIlKAOuyOO+4oJPnCr4022qhQKBQKFRUVhR133LGQpNCxY8fCoYceWrjxxhsLH3744XI9dpLCscceW5g4cWJhwoQJhZdffrmw1157FZIUrrjiisrtfv/73xfq1atXePbZZ6vc/5ZbbikkKfznP/+pXNa9e/dCv379Km8/9dRThSSFp556qlAoFArz5s0rtG3btrDVVlsVFixYULndgAEDCkkKO+64Y+Wy4cOHF5IU7rjjjsplm222WaFDhw6FSZMmVS574403CvXq1SscddRRlcsuuOCCQpLC9773vSozH3DAAYW2bdsu0/cJYE2yOuROoVAozJ49u9r9TzjhhEKTJk0Kc+fOLRQKhcLChQsLPXr0KHTv3r0wZcqUKttWVFRU/v+uu+5a2GSTTSrv98n6bbfdtrDuuusu13MBWJ3VpSx44YUXCrvuumshSeGqq66qsl2jRo0KQ4cOrVz2xhtvFJIUfv3rX1cuO+eccwqlpaWFqVOnVi6bMGFCoUGDBoULLrigUCgUClOmTFli1nzWjjvuWOX1yO23315IUrj66qurbfvpnPlsZs2fP7+w8cYbF3bZZZcqyz/7WglgdVdbeXLAAQcUklT5t79QKBTmzJlTmDhxYuXXp18jLMt7W0ubQfvvv3+hrKysynN49913C/Xr1y98+i3pESNGFOrXr1+45JJLqjz2W2+9VWjQoEGV5Z98j2655ZZl/K4ArDlqK1/233//QpJq7zF92p///OdCksL1119fKBQKhYkTJxaSVL72+LR+/foVkhQuuuiiKss333zzwhZbbFF5+9lnny0kKQwcOLDKdo888ki15d27dy8kKTzyyCPL/Pwobk7DzmrhxhtvzGOPPVbt69OfQiopKcmjjz6aX/ziF2ndunXuueee/OhHP0r37t3z3e9+d7muF/i73/0u7du3T4cOHbLlllvmiSeeyE9+8pOcfvrpldvcf//92WCDDdKnT598/PHHlV+77LJLkkWnP1xaL7/8ciZNmpTjjz++yqe8Dj/88LRu3foL7zt27Ni8/vrrOfroo9OmTZvK5X379s3uu++ef/zjH9Xu84Mf/KDK7e233z6TJk3K9OnTl3pmgDVRXc6dJFWutTRjxox8/PHH2X777TN79uy89957SZLXXnstw4cPz49//OMqR2J8MnuSTJ48OU8++WQOPvjgyv18/PHHmTRpUvbcc88MGTIko0ePXubnAbAmqAtZsPXWW+c///lPTj/99Pz4xz+ust1uu+1W5cwjffv2TYsWLfLBBx9ULjvqqKMyb968Kqc9v/fee7Nw4cLKIw4bN26cRo0a5emnn652GsMv8sADD6Rdu3Y5+eSTq637JGc+2f8npkyZkmnTpmX77bfPq6++utSPBbA6W9V58sl7Os2aNauy/JZbbkn79u0rv77+9a9XrlvW97a+LIPKy8vz6KOPZv/998/aa69dud0GG2yQPffcs8q+/vznP6eioiIHH3xwlcfu1KlT1l133WqPXVpammOOOWapvx8Aa6pVnS8zZsxIkjRv3vxzt/lk3bL0C0vqKD79mub+++9Py5Yts/vuu1fJiS222CLNmjWrlhM9evSoljXwZZyGndXCV7/61Wy55ZbVlrdu3brKqUZKS0tz7rnn5txzz83YsWPz73//O9ddd13uu+++NGzYMH/4wx+W6XH322+/nHTSSZk/f35eeumlXHrppZk9e3bq1Vv8OZMhQ4Zk0KBBldff+KwJEyYs9eN9+OGHSVLtFIsNGjT43NMffva+SzqtyAYbbJBHH300s2bNStOmTSuXf/oFS5LKQn7KlClp0aLFUs8NsKapy7mTLDp1+s9//vM8+eST1V6ATJs2Lcni61JtvPHGn/t4Q4cOTaFQyHnnnZfzzjtvidtMmDAhXbt2XabnAbAmqO0sKCkpSfPmzbPRRhtV+Rv+E5/9W/6T2T5dePfp0ydbbbVVBg4cmGOPPTbJolMwfu1rX6t8zVFaWprLL788Z5xxRjp27Jivfe1r2WeffXLUUUelU6dOnzvnsGHDsv7663/pqRwffvjh/OIXv8jrr79e5bq3ny7UAdZkqzpPPikqZs6cmZYtW1YuP+iggypfG5xxxhlVrge7rO9tfVkGTZw4MXPmzMm6665bbbv111+/ygEdQ4YMSaFQWOK2SaqcWjdJunbtmkaNGi1xW4BiUlv5MmPGjGoHZXxiaQr1TysrK6uWPZ99TTNkyJBMmzYtHTp0WOI+PptRPXr0WKrHhk9TlrPG6ty5cw455JAcdNBB2WijjXLfffdlwIABy3RdjrXWWiu77bZbkuQb3/hG2rVrl5NOOik777xz5TU2Kioqsskmm+Tqq69e4j66deu24k9mJalfv/4SlxcKhVU8CcDqb1XlztSpU7PjjjumRYsWueiii9KrV6+UlZXl1VdfzU9/+tNUVFQs9eN9su2ZZ575uZ+6/ewHuAD4fDWdBV9kaf+WP+qoo3Lqqadm1KhRmTdvXv73v//lhhtuqLLNj3/843zrW9/KQw89lEcffTTnnXdeLrvssjz55JPZfPPNl3r2z3r22Wez7777ZocddshNN92Uzp07p2HDhrnjjjty9913L/d+AdZ0K5Inffr0SZK8/fbb2W677SqXd+vWrfI9qs8WKcv63lZNvp9UUVGRkpKS/POf/1zifj97hPynz1gCwLJZkXzZYIMN8tBDD+XNN9/MDjvssMRt3nzzzSTJhhtuuFTzfF6efFpFRUU6dOiQgQMHLnH9Z8t2OcHyUJazxmvYsGH69u2bIUOGVJ7GaXmdcMIJueaaa/Lzn/88BxxwQEpKStKrV6+88cYb2XXXXVf46Iju3bsnWXSk384771y5fOHChRkxYkSVU6h83n0HDx5cbd17772Xdu3aLfGIFABq1srOnaeffjqTJk3Kn//85yovToYPH17lvp+cFvHtt9/+3NKlZ8+elTMvTTEDwNKpySxYUYccckhOP/303HPPPZkzZ04aNmyY7373u9W269WrV84444ycccYZGTJkSDbbbLNcddVVn3ukSa9evfLCCy9kwYIF1Y76+8QDDzyQsrKyPProoyktLa1cfscdd9TMkwNYwy1Pnuyzzz755S9/mYEDB1Ypy79ITb63lSwqLho3bpwhQ4ZUW/fZ96169eqVQqGQHj16ZL311lvhxwbgyy1vvlx22WW56667lliWl5eX5+67707r1q0r86cmMqVXr155/PHHs9122ynCWWlcs5w1xpAhQ/LRRx9VWz516tQ8//zzad269eeeTmppNWjQIGeccUYGDRqUv/zlL0mSgw8+OKNHj85tt91Wbfs5c+Zk1qxZS73/LbfcMm3bts1tt92WhQsXVi4fOHDgl14/sHPnztlss81y5513VrnWyNtvv51//etf+cY3vrHUcwDw5Wordz751O2nj9qYP39+brrppir3/cpXvpIePXrk2muvrXYNqk/u26FDh+y000659dZbM3bs2GqPP3HixBWaH2BNtyqyYEW1a9cue++9d/7whz9k4MCB2WuvvdKuXbvK9bNnz87cuXOr3KdXr15p3rx5ldOmf9ZBBx2Ujz/+uNpR6sninKlfv35KSkqqnOp3xIgReeihh1bwWQGsWWoyT7bbbrvsvvvu+c1vflP5GuKzPnsEeE2+t5Us+vd/zz33zEMPPVTleQ0aNCiPPvpolW0PPPDA1K9fPxdeeGG1uQqFQiZNmrRMjw3AYjWZL9tuu21222233HHHHXn44YerrT/33HPz/vvv5yc/+Ullqd2kSZPKx1teBx98cMrLy3PxxRdXW7dw4cIV2jd8wpHlrDHeeOONHHbYYdl7772z/fbbp02bNhk9enTuvPPOjBkzJtdee+1Sndbjyxx99NE5//zzc/nll2f//ffPkUcemfvuuy8/+MEP8tRTT2W77bZLeXl53nvvvdx333159NFHl3jtkCVp1KhR+vfvn5NPPjm77LJLDj744IwYMSIDBgxIr169vvSTWFdccUX23nvvbLPNNjn22GMzZ86c/PrXv07Lli3Tv3//FX7uACxWW7mz7bbbpnXr1unXr19OOeWUlJSU5Pe//321N5bq1auXm2++Od/61rey2Wab5Zhjjknnzp3z3nvv5Z133ql8k+rGG2/M17/+9WyyySY5/vjj07Nnz4wfPz7PP/98Ro0alTfeeGOFnwPAmmpVZcGKOuqoo/Ltb387Saq9yfT+++9n1113zcEHH5wNN9wwDRo0yIMPPpjx48fnkEMO+cJ93nXXXTn99NPz4osvZvvtt8+sWbPy+OOP58QTT8x+++2Xb37zm7n66quz11575bDDDsuECRNy4403pnfv3pWnaASg5vPkD3/4Q/baa6/sv//+2XvvvbPbbruldevWGTduXB5//PE888wz2XvvvSu3r8n3tj5x4YUX5pFHHsn222+fE088MQsXLsyvf/3rbLTRRlUyoFevXvnFL36Rc845JyNGjMj++++f5s2bZ/jw4XnwwQfz/e9/P2eeeeYyPTYAi9R0vtx1113Zdddds99+++Wwww7L9ttvn3nz5uXPf/5znn766Xz3u9/NWWedVbl948aNs+GGG+bee+/NeuutlzZt2mTjjTfOxhtvvNSPueOOO+aEE07IZZddltdffz177LFHGjZsmCFDhuT+++/PddddV/laB5aXspw1xg477JCLL744//znP3P11Vdn4sSJad68eTbffPNcfvnlOeigg2rkcRo3bpyTTjop/fv3z9NPP52ddtopDz30UK655prcddddefDBB9OkSZP07Nkzp5566jKfQuqkk05KoVDIVVddlTPPPDObbrpp/vrXv+aUU05JWVnZF953t912yyOPPJILLrgg559/fho2bJgdd9wxl19+eXr06LEiTxuAz6jN3Hn44Ydzxhln5Oc//3lat26dI444Irvuumu1647vueeeeeqpp3LhhRfmqquuSkVFRXr16pXjjz++cpsNN9wwL7/8ci688MIMGDAgkyZNSocOHbL55pvn/PPPr5HnALCmWlVZsKK+9a1vpXXr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+fPnp1GjRjXyuG3atKmR/QBQe2QIAMtLhkDtc2Q5AAAARa+0tDSdOnVK9+7d88Mf/jC77bZb/vrXvyZZfMrCSy65JF26dMn666+fJBk5cmQOPvjgtGrVKm3atMl+++2XESNGVO6zvLw8p59+elq1apW2bdvmJz/5SQqFQpXH/ezpD+fNm5ef/vSn6datW0pLS9O7d+/87ne/y4gRI7LzzjsnSVq3bp2SkpIcffTRSZKKiopcdtll6dGjRxo3bpxNN900f/rTn6o8zj/+8Y+st956ady4cXbeeecqcy6tn/70p1lvvfXSpEmT9OzZM+edd14WLFhQbbtbb7013bp1S5MmTXLwwQdn2rRpVdb/9re/zQYbbJCysrL06dMnN9100zLPAlCXyJAvJ0MAlkyGfDkZwsqmLAcAAIDPaNy4cebPn195+4knnsjgwYPz2GOP5eGHH86CBQuy5557pnnz5nn22Wfzn//8J82aNctee+1Veb+rrroqAwYMyO23357nnnsukydPzoMPPviFj3vUUUflnnvuyfXXX59Bgwbl1ltvTbNmzdKtW7c88MADSZLBgwdn7Nixue6665Ikl112We66667ccssteeedd3LaaafliCOOyL///e8ki95MO/DAA/Otb30rr7/+eo477ricffbZy/w9ad68eQYMGJB333031113XW677bZcc801VbYZOnRo7rvvvvztb3/LI488ktdeey0nnnhi5fqBAwfm/PPPzyWXXJJBgwbl0ksvzXnnnZc777xzmecBqKtkSHUyBGDpyJDqZAgrXQEAAACKWL9+/Qr77bdfoVAoFCoqKgqPPfZYobS0tHDmmWdWru/YsWNh3rx5lff5/e9/X1h//fULFRUVlcvmzZtXaNy4ceHRRx8tFAqFQufOnQu/+tWvKtcvWLCgsNZaa1U+VqFQKOy4446FU089tVAoFAqDBw8uJCk89thjS5zzqaeeKiQpTJkypXLZ3LlzC02aNCn897//rbLtscceWzj00EMLhUKhcM455xQ23HDDKut/+tOfVtvXZyUpPPjgg5+7/oorrihsscUWlbcvuOCCQv369QujRo2qXPbPf/6zUK9evcLYsWMLhUKh0KtXr8Ldd99dZT8XX3xxYZtttikUCoXC8OHDC0kKr7322uc+LkBdIkOWTIYAfDkZsmQyhFXNNcsBAAAoeg8//HCaNWuWBQsWpKKiIocddlj69+9fuX6TTTapcn3AN954I0OHDk3z5s2r7Gfu3LkZNmxYpk2blrFjx2brrbeuXNegQYNsueWW1U6B+InXX3899evXz4477rjUcw8dOjSzZ8/O7rvvXmX5/Pnzs/nmmydJBg0aVGWOJNlmm22W+jE+ce+99+b666/PsGHDMnPmzCxcuDAtWrSoss3aa6+drl27VnmcioqKDB48OM2bN8+wYcNy7LHH5vjjj6/cZuHChWnZsuUyzwNQV8iQLydDAJZMhnw5GcLKpiwHAACg6O288865+eab06hRo3Tp0iUNGlR9udy0adMqt2fOnJktttgiAwcOrLav9u3bL9cMjRs3Xub7zJw5M0ny97//vcqbQ8mi6x/WlOeffz6HH354Lrzwwuy5555p2bJl/vjHP+aqq65a5llvu+22am+a1a9fv8ZmBVjVZMgXkyEAn0+GfDEZwqqgLAcAAKDoNW3aNL17917q7b/yla/k3nvvTYcOHaod1fCJzp0754UXXsgOO+yQZNGRC6+88kq+8pWvLHH7TTbZJBUVFfn3v/+d3Xbbrdr6T44oKS8vr1y24YYbprS0NB999NHnHgmywQYb5K9//WuVZf/73/++/El+yn//+99079495557buWyDz/8sNp2H330UcaMGZMuXbpUPk69evWy/vrrp2PHjunSpUs++OCDHH744cv0+AB1mQz5YjIE4PPJkC8mQ1gV6tX2AAAAALC6Ofzww9OuXbvst99+efbZZzN8+PA8/fTTOeWUUzJq1Kgkyamnnppf/vKXeeihh/Lee+/lxBNPzNSpUz93n+uss0769euX733ve3nooYcq93nfffclSbp3756SkpI8/PDDmThxYmbOnJnmzZvnzDPPzGmnnZY777wzw4YNy6uvvppf//rXufPOO5MkP/jBDzJkyJCcddZZGTx4cO6+++4MGDBgmZ7vuuuum48++ih//OMfM2zYsFx//fV58MEHq21XVlaWfv365Y033sizzz6bU045JQcffHA6deqUJLnwwgtz2WWX5frrr8/777+ft956K3fccUeuvvrqZZoHYHUmQ2QIwPKSITKEmqcsBwAAgGXUpEmTPPPMM1l77bVz4IEHZoMNNsixxx6buXPnVh7hccYZZ+TII49Mv379ss0226R58+Y54IADvnC/N998c7797W/nxBNPTJ8+fXL88cdn1qxZSZKuXbvmwgsvzNlnn52OHTvmpJNOSpJcfPHFOe+883LZZZdlgw02yF577ZW///3v6dGjR5JF1+974IEH8tBDD2XTTTfNLbfckksvvXSZnu++++6b0047LSeddFI222yz/Pe//815551XbbvevXvnwAMPzDe+8Y3sscce6du3b2666abK9ccdd1x++9vf5o477sgmm2ySHXfcMQMGDKicFaAYyBAZArC8ZIgMoeaVFAqFQm0PAQAAAAAAAACrkiPLAQAAAAAAACg6ynIAAAAAAAAAio6yHAAAAAAAAICioywHAAAAAAAAoOgoywEAAAAAAAAoOspyAAAAAAAAAIqOshwAAAAAAACAoqMsBwAAAAAAAKDoKMsBAAAAAAAAKDrKcgAAAAAAAACKjrIcAAAAAAAAgKLzf4MT/Vd3JxduAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","\n","clf = MultiOutputClassifier(RandomForestClassifier()).fit(train_x,train_y)\n","y_score = clf.predict(test_x)"],"metadata":{"id":"gJ50mwhaWmRM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"Accuracy: %.2f%%\" % (accuracy_score(test_y, y_score) * 100))\n","eval_report = classification_report(test_y, y_score, target_names=y.columns)\n","print(eval_report)\n","\n","mcm = multilabel_confusion_matrix(test_y, y_score)\n","\n","mcm_disp = ConfusionMatrixDisplay(mcm)\n","\n","f, axes = plt.subplots(1, 5, figsize=(25, 5))\n","axes = axes.ravel()\n","\n","for i in range(5):\n","  disp = ConfusionMatrixDisplay(mcm[i], display_labels=[0, 1])\n","  disp.plot(ax=axes[i], values_format='.4g')\n","  disp.ax_.set_title(f'{y.columns[i]}')\n","  if i<2:\n","      disp.ax_.set_xlabel('')\n","  if i%5!=0:\n","      disp.ax_.set_ylabel('')\n","  disp.im_.colorbar.remove()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":558},"id":"S2jtCXo3WtTE","executionInfo":{"status":"ok","timestamp":1687160263443,"user_tz":-420,"elapsed":1417,"user":{"displayName":"Eldwin Felice","userId":"03749008353362800096"}},"outputId":"63a7d202-023f-4c6e-94c3-51cd812b5447"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 83.69%\n","              precision    recall  f1-score   support\n","\n"," HS_Religion       0.79      0.82      0.80       239\n","     HS_Race       0.88      0.77      0.82       167\n"," HS_Physical       0.84      0.48      0.61       100\n","   HS_Gender       0.86      0.66      0.74        90\n","    HS_Other       0.91      0.92      0.91      1117\n","\n","   micro avg       0.88      0.85      0.87      1713\n","   macro avg       0.86      0.73      0.78      1713\n","weighted avg       0.88      0.85      0.86      1713\n"," samples avg       0.86      0.86      0.86      1713\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in samples with no predicted labels. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2500x500 with 5 Axes>"],"image/png":"\n"},"metadata":{}}]}]}